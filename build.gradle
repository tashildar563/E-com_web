buildscript {
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin")
    }
}
plugins {
    id 'org.springframework.boot' version '3.2.3'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

ext.microserviceBaseName = 'ecom'
ext.globalVersion = '1.0.0'
ext.deployDir = 'deploy/application/dist'
ext.buildType = 'SNAPSHOT'
ext.microserviceDesc = 'Ecom'

group = 'org.example'
version = '1.0-SNAPSHOT'

tasks.withType(org.gradle.jvm.tasks.Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

bootJar {
    archiveBaseName = project.property('microserviceBaseName')
    archiveVersion =  project.property('globalVersion') + '.' + project.property('buildType')
    destinationDirectory = file(project.property('deployDir'))
}

task copyProperties(type: Copy) {
    from('src/main/resources/')
    into(project.property('deployDir'))
    include('application.properties')
}

repositories {
    mavenCentral()
    maven {
        url "https://maven.google.com/"
    }
}
sourceCompatibility = 17
targetCompatibility = 17
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

ext['hibernate.version'] = '6.2.5.Final'
ext['log4j2.version'] = '2.20.0'

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-log4j2")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework:spring-aspects")
    implementation("org.springframework:spring-context-support")
    implementation("org.springframework.boot:spring-boot-starter-batch")
    implementation("org.flywaydb:flyway-core:8.5.6")

    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.20'


    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}
test {
    useJUnitPlatform()
}